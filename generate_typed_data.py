import argparse
import json
import os

from tqdm import trange

def generate_typed_data(args):
    total_num = 0
    OneType_num = 0
    TwoType_num = 0

    with open(os.path.join(args.data_dir, "test.json"), "r", encoding="utf8") as f:
        data = json.load(f)
    with open(args.dict_path, "r", encoding="utf8") as f:
        dicts = json.load(f)


    for i in trange(len(data), desc="Progress"):
        dict = dicts[i]

        for j in range(len(data[i][1])):
            x = data[i][1][j]["x"]
            y = data[i][1][j]["y"]

            x_type = data[i][1][j]["x_type"] if "Speaker" not in x else "SPK"
            y_type = data[i][1][j]["y_type"] if "Speaker" not in y else "SPK"
            wrong = 0
            if "SPK" not in x_type:
                if dict[x] != x_type:
                    wrong += 1
                x_type = dict[x]

            if "SPK" not in y_type:
                if dict[y] != y_type:
                    wrong += 1
                y_type = dict[y]

            data[i][1][j]["x_type"] = x_type
            data[i][1][j]["y_type"] = y_type

            if wrong == 1:
                OneType_num += 1
            if wrong == 2:
                TwoType_num += 1
            total_num += 1


    if not os.path.exists(args.typed_data_dir):
        os.makedirs(args.typed_data_dir, exist_ok=True)
    with open(os.path.join(args.typed_data_dir, "test.json"), "w", encoding="utf8") as fw:
        json.dump(data, fw)

    print("Number of entity pairs that have one entity with different type: " + str(OneType_num) + " / " + str(total_num) + " (" + str(round(OneType_num * 100.0 / total_num, 4)) + "%)")
    print("Number of entity pairs that have two entities with different types: " + str(TwoType_num) + " / " + str(total_num) + " (" + str(round(TwoType_num * 100.0/total_num, 4)) + "%)")

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--data_dir",
                        type=str,
                        default="dataset/DialogRE",
                        help="The input datasets dir. Should contain the .json for the task.")
    parser.add_argument("--typed_data_dir",
                        type=str,
                        default="dataset/DialogRE_typed",
                        help="The input datasets dir that contains .json file of the test set generated by entity typing module.")
    parser.add_argument("--dict_path",
                        type=str,
                        required=True,
                        help="The path of entity-type dictionary generated by entity typing module.")
    args = parser.parse_args()
    generate_typed_data(args)
